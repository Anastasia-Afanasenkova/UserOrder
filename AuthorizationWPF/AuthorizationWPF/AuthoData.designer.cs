#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuthorizationWPF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Производство")]
	public partial class AuthoDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertFurniture(Furniture instance);
    partial void UpdateFurniture(Furniture instance);
    partial void DeleteFurniture(Furniture instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertOrderedProduct(OrderedProduct instance);
    partial void UpdateOrderedProduct(OrderedProduct instance);
    partial void DeleteOrderedProduct(OrderedProduct instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductFabric(ProductFabric instance);
    partial void UpdateProductFabric(ProductFabric instance);
    partial void DeleteProductFabric(ProductFabric instance);
    partial void InsertProductFurniture(ProductFurniture instance);
    partial void UpdateProductFurniture(ProductFurniture instance);
    partial void DeleteProductFurniture(ProductFurniture instance);
    partial void InsertStageOfExecution(StageOfExecution instance);
    partial void UpdateStageOfExecution(StageOfExecution instance);
    partial void DeleteStageOfExecution(StageOfExecution instance);
    partial void InsertTextile(Textile instance);
    partial void UpdateTextile(Textile instance);
    partial void DeleteTextile(Textile instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserRole(UserRole instance);
    partial void UpdateUserRole(UserRole instance);
    partial void DeleteUserRole(UserRole instance);
    partial void InsertWarehouseOfFurniture(WarehouseOfFurniture instance);
    partial void UpdateWarehouseOfFurniture(WarehouseOfFurniture instance);
    partial void DeleteWarehouseOfFurniture(WarehouseOfFurniture instance);
    partial void InsertWarehouseOfTextile(WarehouseOfTextile instance);
    partial void UpdateWarehouseOfTextile(WarehouseOfTextile instance);
    partial void DeleteWarehouseOfTextile(WarehouseOfTextile instance);
    partial void InsertBookings(Bookings instance);
    partial void UpdateBookings(Bookings instance);
    partial void DeleteBookings(Bookings instance);
    partial void InsertGoods(Goods instance);
    partial void UpdateGoods(Goods instance);
    partial void DeleteGoods(Goods instance);
    #endregion
		
		public AuthoDataDataContext() : 
				base(global::AuthorizationWPF.Properties.Settings.Default.ПроизводствоConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AuthoDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuthoDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuthoDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AuthoDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Furniture> Furniture
		{
			get
			{
				return this.GetTable<Furniture>();
			}
		}
		
		public System.Data.Linq.Table<Order> Order
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<OrderedProduct> OrderedProduct
		{
			get
			{
				return this.GetTable<OrderedProduct>();
			}
		}
		
		public System.Data.Linq.Table<Product> Product
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductFabric> ProductFabric
		{
			get
			{
				return this.GetTable<ProductFabric>();
			}
		}
		
		public System.Data.Linq.Table<ProductFurniture> ProductFurniture
		{
			get
			{
				return this.GetTable<ProductFurniture>();
			}
		}
		
		public System.Data.Linq.Table<StageOfExecution> StageOfExecution
		{
			get
			{
				return this.GetTable<StageOfExecution>();
			}
		}
		
		public System.Data.Linq.Table<Textile> Textile
		{
			get
			{
				return this.GetTable<Textile>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserRole> UserRole
		{
			get
			{
				return this.GetTable<UserRole>();
			}
		}
		
		public System.Data.Linq.Table<WarehouseOfFurniture> WarehouseOfFurniture
		{
			get
			{
				return this.GetTable<WarehouseOfFurniture>();
			}
		}
		
		public System.Data.Linq.Table<WarehouseOfTextile> WarehouseOfTextile
		{
			get
			{
				return this.GetTable<WarehouseOfTextile>();
			}
		}
		
		public System.Data.Linq.Table<Bookings> Bookings
		{
			get
			{
				return this.GetTable<Bookings>();
			}
		}
		
		public System.Data.Linq.Table<Goods> Goods
		{
			get
			{
				return this.GetTable<Goods>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Furniture")]
	public partial class Furniture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFurniture;
		
		private string _ArticteF;
		
		private string _Name;
		
		private double _WidthInMillimetr;
		
		private System.Nullable<double> _LengthInMillimetr;
		
		private string _Type;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<double> _Weight;
		
		private System.Data.Linq.Binary _Photo;
		
		private EntitySet<ProductFurniture> _ProductFurniture;
		
		private EntitySet<WarehouseOfFurniture> _WarehouseOfFurniture;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFurnitureChanging(int value);
    partial void OnIdFurnitureChanged();
    partial void OnArticteFChanging(string value);
    partial void OnArticteFChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWidthInMillimetrChanging(double value);
    partial void OnWidthInMillimetrChanged();
    partial void OnLengthInMillimetrChanging(System.Nullable<double> value);
    partial void OnLengthInMillimetrChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnWeightChanging(System.Nullable<double> value);
    partial void OnWeightChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    #endregion
		
		public Furniture()
		{
			this._ProductFurniture = new EntitySet<ProductFurniture>(new Action<ProductFurniture>(this.attach_ProductFurniture), new Action<ProductFurniture>(this.detach_ProductFurniture));
			this._WarehouseOfFurniture = new EntitySet<WarehouseOfFurniture>(new Action<WarehouseOfFurniture>(this.attach_WarehouseOfFurniture), new Action<WarehouseOfFurniture>(this.detach_WarehouseOfFurniture));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFurniture", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFurniture
		{
			get
			{
				return this._IdFurniture;
			}
			set
			{
				if ((this._IdFurniture != value))
				{
					this.OnIdFurnitureChanging(value);
					this.SendPropertyChanging();
					this._IdFurniture = value;
					this.SendPropertyChanged("IdFurniture");
					this.OnIdFurnitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticteF", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ArticteF
		{
			get
			{
				return this._ArticteF;
			}
			set
			{
				if ((this._ArticteF != value))
				{
					this.OnArticteFChanging(value);
					this.SendPropertyChanging();
					this._ArticteF = value;
					this.SendPropertyChanged("ArticteF");
					this.OnArticteFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthInMillimetr", DbType="Float NOT NULL")]
		public double WidthInMillimetr
		{
			get
			{
				return this._WidthInMillimetr;
			}
			set
			{
				if ((this._WidthInMillimetr != value))
				{
					this.OnWidthInMillimetrChanging(value);
					this.SendPropertyChanging();
					this._WidthInMillimetr = value;
					this.SendPropertyChanged("WidthInMillimetr");
					this.OnWidthInMillimetrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthInMillimetr", DbType="Float")]
		public System.Nullable<double> LengthInMillimetr
		{
			get
			{
				return this._LengthInMillimetr;
			}
			set
			{
				if ((this._LengthInMillimetr != value))
				{
					this.OnLengthInMillimetrChanging(value);
					this.SendPropertyChanging();
					this._LengthInMillimetr = value;
					this.SendPropertyChanged("LengthInMillimetr");
					this.OnLengthInMillimetrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float")]
		public System.Nullable<double> Weight
		{
			get
			{
				return this._Weight;
			}
			set
			{
				if ((this._Weight != value))
				{
					this.OnWeightChanging(value);
					this.SendPropertyChanging();
					this._Weight = value;
					this.SendPropertyChanged("Weight");
					this.OnWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Furniture_ProductFurniture", Storage="_ProductFurniture", ThisKey="IdFurniture", OtherKey="IdFurniture")]
		public EntitySet<ProductFurniture> ProductFurniture
		{
			get
			{
				return this._ProductFurniture;
			}
			set
			{
				this._ProductFurniture.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Furniture_WarehouseOfFurniture", Storage="_WarehouseOfFurniture", ThisKey="IdFurniture", OtherKey="IdFurniture")]
		public EntitySet<WarehouseOfFurniture> WarehouseOfFurniture
		{
			get
			{
				return this._WarehouseOfFurniture;
			}
			set
			{
				this._WarehouseOfFurniture.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductFurniture(ProductFurniture entity)
		{
			this.SendPropertyChanging();
			entity.Furniture = this;
		}
		
		private void detach_ProductFurniture(ProductFurniture entity)
		{
			this.SendPropertyChanging();
			entity.Furniture = null;
		}
		
		private void attach_WarehouseOfFurniture(WarehouseOfFurniture entity)
		{
			this.SendPropertyChanging();
			entity.Furniture = this;
		}
		
		private void detach_WarehouseOfFurniture(WarehouseOfFurniture entity)
		{
			this.SendPropertyChanging();
			entity.Furniture = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Order]")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Number;
		
		private System.DateTime _Date;
		
		private int _IdStageOfExecution;
		
		private string _Customer;
		
		private string _Manager;
		
		private System.Nullable<decimal> _Cost;
		
		private EntityRef<OrderedProduct> _OrderedProduct;
		
		private EntityRef<StageOfExecution> _StageOfExecution;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumberChanging(int value);
    partial void OnNumberChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnIdStageOfExecutionChanging(int value);
    partial void OnIdStageOfExecutionChanged();
    partial void OnCustomerChanging(string value);
    partial void OnCustomerChanged();
    partial void OnManagerChanging(string value);
    partial void OnManagerChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    #endregion
		
		public Order()
		{
			this._OrderedProduct = default(EntityRef<OrderedProduct>);
			this._StageOfExecution = default(EntityRef<StageOfExecution>);
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					if (this._OrderedProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStageOfExecution", DbType="Int NOT NULL")]
		public int IdStageOfExecution
		{
			get
			{
				return this._IdStageOfExecution;
			}
			set
			{
				if ((this._IdStageOfExecution != value))
				{
					if (this._StageOfExecution.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdStageOfExecutionChanging(value);
					this.SendPropertyChanging();
					this._IdStageOfExecution = value;
					this.SendPropertyChanged("IdStageOfExecution");
					this.OnIdStageOfExecutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Customer
		{
			get
			{
				return this._Customer;
			}
			set
			{
				if ((this._Customer != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerChanging(value);
					this.SendPropertyChanging();
					this._Customer = value;
					this.SendPropertyChanged("Customer");
					this.OnCustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manager", DbType="NVarChar(50)")]
		public string Manager
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnManagerChanging(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("Manager");
					this.OnManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderedProduct_Order", Storage="_OrderedProduct", ThisKey="Number", OtherKey="OrderNumber", IsForeignKey=true)]
		public OrderedProduct OrderedProduct
		{
			get
			{
				return this._OrderedProduct.Entity;
			}
			set
			{
				OrderedProduct previousValue = this._OrderedProduct.Entity;
				if (((previousValue != value) 
							|| (this._OrderedProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrderedProduct.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._OrderedProduct.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._Number = value.OrderNumber;
					}
					else
					{
						this._Number = default(int);
					}
					this.SendPropertyChanged("OrderedProduct");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageOfExecution_Order", Storage="_StageOfExecution", ThisKey="IdStageOfExecution", OtherKey="IdStageOfExecution", IsForeignKey=true)]
		public StageOfExecution StageOfExecution
		{
			get
			{
				return this._StageOfExecution.Entity;
			}
			set
			{
				StageOfExecution previousValue = this._StageOfExecution.Entity;
				if (((previousValue != value) 
							|| (this._StageOfExecution.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StageOfExecution.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._StageOfExecution.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._IdStageOfExecution = value.IdStageOfExecution;
					}
					else
					{
						this._IdStageOfExecution = default(int);
					}
					this.SendPropertyChanged("StageOfExecution");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_User", ThisKey="Customer", OtherKey="Login", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Order.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Order.Add(this);
						this._Customer = value.Login;
					}
					else
					{
						this._Customer = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order1", Storage="_User1", ThisKey="Manager", OtherKey="Login", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Order1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Order1.Add(this);
						this._Manager = value.Login;
					}
					else
					{
						this._Manager = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrderedProduct")]
	public partial class OrderedProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OrderNumber;
		
		private int _IdProduct;
		
		private short _Qty;
		
		private EntitySet<Order> _Order;
		
		private EntityRef<Product> _Product;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrderNumberChanging(int value);
    partial void OnOrderNumberChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnQtyChanging(short value);
    partial void OnQtyChanged();
    #endregion
		
		public OrderedProduct()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNumber", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int OrderNumber
		{
			get
			{
				return this._OrderNumber;
			}
			set
			{
				if ((this._OrderNumber != value))
				{
					this.OnOrderNumberChanging(value);
					this.SendPropertyChanging();
					this._OrderNumber = value;
					this.SendPropertyChanged("OrderNumber");
					this.OnOrderNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL")]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="SmallInt NOT NULL")]
		public short Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OrderedProduct_Order", Storage="_Order", ThisKey="OrderNumber", OtherKey="Number")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderedProduct", Storage="_Product", ThisKey="IdProduct", OtherKey="IdProduct", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.OrderedProduct.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.OrderedProduct.Add(this);
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdProduct = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderedProduct = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.OrderedProduct = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProduct;
		
		private string _Article;
		
		private string _Name;
		
		private double _WidthInMillimetr;
		
		private double _LengthInMillimetr;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Comment;
		
		private EntitySet<OrderedProduct> _OrderedProduct;
		
		private EntitySet<ProductFabric> _ProductFabric;
		
		private EntitySet<ProductFurniture> _ProductFurniture;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWidthInMillimetrChanging(double value);
    partial void OnWidthInMillimetrChanged();
    partial void OnLengthInMillimetrChanging(double value);
    partial void OnLengthInMillimetrChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public Product()
		{
			this._OrderedProduct = new EntitySet<OrderedProduct>(new Action<OrderedProduct>(this.attach_OrderedProduct), new Action<OrderedProduct>(this.detach_OrderedProduct));
			this._ProductFabric = new EntitySet<ProductFabric>(new Action<ProductFabric>(this.attach_ProductFabric), new Action<ProductFabric>(this.detach_ProductFabric));
			this._ProductFurniture = new EntitySet<ProductFurniture>(new Action<ProductFurniture>(this.attach_ProductFurniture), new Action<ProductFurniture>(this.detach_ProductFurniture));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthInMillimetr", DbType="Float NOT NULL")]
		public double WidthInMillimetr
		{
			get
			{
				return this._WidthInMillimetr;
			}
			set
			{
				if ((this._WidthInMillimetr != value))
				{
					this.OnWidthInMillimetrChanging(value);
					this.SendPropertyChanging();
					this._WidthInMillimetr = value;
					this.SendPropertyChanged("WidthInMillimetr");
					this.OnWidthInMillimetrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthInMillimetr", DbType="Float NOT NULL")]
		public double LengthInMillimetr
		{
			get
			{
				return this._LengthInMillimetr;
			}
			set
			{
				if ((this._LengthInMillimetr != value))
				{
					this.OnLengthInMillimetrChanging(value);
					this.SendPropertyChanging();
					this._LengthInMillimetr = value;
					this.SendPropertyChanged("LengthInMillimetr");
					this.OnLengthInMillimetrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NVarChar(500)")]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_OrderedProduct", Storage="_OrderedProduct", ThisKey="IdProduct", OtherKey="IdProduct")]
		public EntitySet<OrderedProduct> OrderedProduct
		{
			get
			{
				return this._OrderedProduct;
			}
			set
			{
				this._OrderedProduct.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductFabric", Storage="_ProductFabric", ThisKey="IdProduct", OtherKey="IdProduct")]
		public EntitySet<ProductFabric> ProductFabric
		{
			get
			{
				return this._ProductFabric;
			}
			set
			{
				this._ProductFabric.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductFurniture", Storage="_ProductFurniture", ThisKey="IdProduct", OtherKey="IdProduct")]
		public EntitySet<ProductFurniture> ProductFurniture
		{
			get
			{
				return this._ProductFurniture;
			}
			set
			{
				this._ProductFurniture.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_OrderedProduct(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_OrderedProduct(OrderedProduct entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductFabric(ProductFabric entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductFabric(ProductFabric entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ProductFurniture(ProductFurniture entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ProductFurniture(ProductFurniture entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductFabric")]
	public partial class ProductFabric : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTextile;
		
		private int _IdProduct;
		
		private int _IdProductFabric;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<Textile> _Textile;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTextileChanging(int value);
    partial void OnIdTextileChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnIdProductFabricChanging(int value);
    partial void OnIdProductFabricChanged();
    #endregion
		
		public ProductFabric()
		{
			this._Product = default(EntityRef<Product>);
			this._Textile = default(EntityRef<Textile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTextile", DbType="Int NOT NULL")]
		public int IdTextile
		{
			get
			{
				return this._IdTextile;
			}
			set
			{
				if ((this._IdTextile != value))
				{
					if (this._Textile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTextileChanging(value);
					this.SendPropertyChanging();
					this._IdTextile = value;
					this.SendPropertyChanged("IdTextile");
					this.OnIdTextileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL")]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProductFabric", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdProductFabric
		{
			get
			{
				return this._IdProductFabric;
			}
			set
			{
				if ((this._IdProductFabric != value))
				{
					this.OnIdProductFabricChanging(value);
					this.SendPropertyChanging();
					this._IdProductFabric = value;
					this.SendPropertyChanged("IdProductFabric");
					this.OnIdProductFabricChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductFabric", Storage="_Product", ThisKey="IdProduct", OtherKey="IdProduct", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductFabric.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductFabric.Add(this);
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdProduct = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Textile_ProductFabric", Storage="_Textile", ThisKey="IdTextile", OtherKey="IdTextile", IsForeignKey=true)]
		public Textile Textile
		{
			get
			{
				return this._Textile.Entity;
			}
			set
			{
				Textile previousValue = this._Textile.Entity;
				if (((previousValue != value) 
							|| (this._Textile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Textile.Entity = null;
						previousValue.ProductFabric.Remove(this);
					}
					this._Textile.Entity = value;
					if ((value != null))
					{
						value.ProductFabric.Add(this);
						this._IdTextile = value.IdTextile;
					}
					else
					{
						this._IdTextile = default(int);
					}
					this.SendPropertyChanged("Textile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductFurniture")]
	public partial class ProductFurniture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFurniture;
		
		private int _IdProduct;
		
		private string _Placing;
		
		private System.Nullable<double> _Width;
		
		private System.Nullable<double> _Length;
		
		private System.Nullable<short> _Rotation;
		
		private short _Qty;
		
		private EntityRef<Furniture> _Furniture;
		
		private EntityRef<Product> _Product;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFurnitureChanging(int value);
    partial void OnIdFurnitureChanged();
    partial void OnIdProductChanging(int value);
    partial void OnIdProductChanged();
    partial void OnPlacingChanging(string value);
    partial void OnPlacingChanged();
    partial void OnWidthChanging(System.Nullable<double> value);
    partial void OnWidthChanged();
    partial void OnLengthChanging(System.Nullable<double> value);
    partial void OnLengthChanged();
    partial void OnRotationChanging(System.Nullable<short> value);
    partial void OnRotationChanged();
    partial void OnQtyChanging(short value);
    partial void OnQtyChanged();
    #endregion
		
		public ProductFurniture()
		{
			this._Furniture = default(EntityRef<Furniture>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFurniture", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFurniture
		{
			get
			{
				return this._IdFurniture;
			}
			set
			{
				if ((this._IdFurniture != value))
				{
					if (this._Furniture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFurnitureChanging(value);
					this.SendPropertyChanging();
					this._IdFurniture = value;
					this.SendPropertyChanged("IdFurniture");
					this.OnIdFurnitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProduct", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProduct
		{
			get
			{
				return this._IdProduct;
			}
			set
			{
				if ((this._IdProduct != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProductChanging(value);
					this.SendPropertyChanging();
					this._IdProduct = value;
					this.SendPropertyChanged("IdProduct");
					this.OnIdProductChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Placing", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Placing
		{
			get
			{
				return this._Placing;
			}
			set
			{
				if ((this._Placing != value))
				{
					this.OnPlacingChanging(value);
					this.SendPropertyChanging();
					this._Placing = value;
					this.SendPropertyChanged("Placing");
					this.OnPlacingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Float")]
		public System.Nullable<double> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Float")]
		public System.Nullable<double> Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rotation", DbType="SmallInt")]
		public System.Nullable<short> Rotation
		{
			get
			{
				return this._Rotation;
			}
			set
			{
				if ((this._Rotation != value))
				{
					this.OnRotationChanging(value);
					this.SendPropertyChanging();
					this._Rotation = value;
					this.SendPropertyChanged("Rotation");
					this.OnRotationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="SmallInt NOT NULL")]
		public short Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Furniture_ProductFurniture", Storage="_Furniture", ThisKey="IdFurniture", OtherKey="IdFurniture", IsForeignKey=true)]
		public Furniture Furniture
		{
			get
			{
				return this._Furniture.Entity;
			}
			set
			{
				Furniture previousValue = this._Furniture.Entity;
				if (((previousValue != value) 
							|| (this._Furniture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Furniture.Entity = null;
						previousValue.ProductFurniture.Remove(this);
					}
					this._Furniture.Entity = value;
					if ((value != null))
					{
						value.ProductFurniture.Add(this);
						this._IdFurniture = value.IdFurniture;
					}
					else
					{
						this._IdFurniture = default(int);
					}
					this.SendPropertyChanged("Furniture");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ProductFurniture", Storage="_Product", ThisKey="IdProduct", OtherKey="IdProduct", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ProductFurniture.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ProductFurniture.Add(this);
						this._IdProduct = value.IdProduct;
					}
					else
					{
						this._IdProduct = default(int);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StageOfExecution")]
	public partial class StageOfExecution : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdStageOfExecution;
		
		private string _Name;
		
		private EntitySet<Order> _Order;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdStageOfExecutionChanging(int value);
    partial void OnIdStageOfExecutionChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public StageOfExecution()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdStageOfExecution", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdStageOfExecution
		{
			get
			{
				return this._IdStageOfExecution;
			}
			set
			{
				if ((this._IdStageOfExecution != value))
				{
					this.OnIdStageOfExecutionChanging(value);
					this.SendPropertyChanging();
					this._IdStageOfExecution = value;
					this.SendPropertyChanged("IdStageOfExecution");
					this.OnIdStageOfExecutionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StageOfExecution_Order", Storage="_Order", ThisKey="IdStageOfExecution", OtherKey="IdStageOfExecution")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.StageOfExecution = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.StageOfExecution = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Textile")]
	public partial class Textile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTextile;
		
		private string _Article;
		
		private string _Name;
		
		private string _Color;
		
		private string _Picture;
		
		private System.Data.Linq.Binary _Photo;
		
		private string _Composition;
		
		private double _WidthInSm;
		
		private double _LengthInMeters;
		
		private decimal _Price;
		
		private EntitySet<ProductFabric> _ProductFabric;
		
		private EntitySet<WarehouseOfTextile> _WarehouseOfTextile;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTextileChanging(int value);
    partial void OnIdTextileChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnPhotoChanging(System.Data.Linq.Binary value);
    partial void OnPhotoChanged();
    partial void OnCompositionChanging(string value);
    partial void OnCompositionChanged();
    partial void OnWidthInSmChanging(double value);
    partial void OnWidthInSmChanged();
    partial void OnLengthInMetersChanging(double value);
    partial void OnLengthInMetersChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
		
		public Textile()
		{
			this._ProductFabric = new EntitySet<ProductFabric>(new Action<ProductFabric>(this.attach_ProductFabric), new Action<ProductFabric>(this.detach_ProductFabric));
			this._WarehouseOfTextile = new EntitySet<WarehouseOfTextile>(new Action<WarehouseOfTextile>(this.attach_WarehouseOfTextile), new Action<WarehouseOfTextile>(this.detach_WarehouseOfTextile));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTextile", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTextile
		{
			get
			{
				return this._IdTextile;
			}
			set
			{
				if ((this._IdTextile != value))
				{
					this.OnIdTextileChanging(value);
					this.SendPropertyChanging();
					this._IdTextile = value;
					this.SendPropertyChanged("IdTextile");
					this.OnIdTextileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(50)")]
		public string Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(50)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Composition", DbType="NVarChar(150)")]
		public string Composition
		{
			get
			{
				return this._Composition;
			}
			set
			{
				if ((this._Composition != value))
				{
					this.OnCompositionChanging(value);
					this.SendPropertyChanging();
					this._Composition = value;
					this.SendPropertyChanged("Composition");
					this.OnCompositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WidthInSm", DbType="Float NOT NULL")]
		public double WidthInSm
		{
			get
			{
				return this._WidthInSm;
			}
			set
			{
				if ((this._WidthInSm != value))
				{
					this.OnWidthInSmChanging(value);
					this.SendPropertyChanging();
					this._WidthInSm = value;
					this.SendPropertyChanged("WidthInSm");
					this.OnWidthInSmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LengthInMeters", DbType="Float NOT NULL")]
		public double LengthInMeters
		{
			get
			{
				return this._LengthInMeters;
			}
			set
			{
				if ((this._LengthInMeters != value))
				{
					this.OnLengthInMetersChanging(value);
					this.SendPropertyChanging();
					this._LengthInMeters = value;
					this.SendPropertyChanged("LengthInMeters");
					this.OnLengthInMetersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Textile_ProductFabric", Storage="_ProductFabric", ThisKey="IdTextile", OtherKey="IdTextile")]
		public EntitySet<ProductFabric> ProductFabric
		{
			get
			{
				return this._ProductFabric;
			}
			set
			{
				this._ProductFabric.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Textile_WarehouseOfTextile", Storage="_WarehouseOfTextile", ThisKey="IdTextile", OtherKey="IdTextile")]
		public EntitySet<WarehouseOfTextile> WarehouseOfTextile
		{
			get
			{
				return this._WarehouseOfTextile;
			}
			set
			{
				this._WarehouseOfTextile.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProductFabric(ProductFabric entity)
		{
			this.SendPropertyChanging();
			entity.Textile = this;
		}
		
		private void detach_ProductFabric(ProductFabric entity)
		{
			this.SendPropertyChanging();
			entity.Textile = null;
		}
		
		private void attach_WarehouseOfTextile(WarehouseOfTextile entity)
		{
			this.SendPropertyChanging();
			entity.Textile = this;
		}
		
		private void detach_WarehouseOfTextile(WarehouseOfTextile entity)
		{
			this.SendPropertyChanging();
			entity.Textile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Login;
		
		private string _Password;
		
		private int _IdRole;
		
		private string _Name;
		
		private EntitySet<Order> _Order;
		
		private EntitySet<Order> _Order1;
		
		private EntitySet<Bookings> _Bookings;
		
		private EntitySet<Bookings> _Bookings1;
		
		private EntityRef<UserRole> _UserRole;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIdRoleChanging(int value);
    partial void OnIdRoleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public User()
		{
			this._Order = new EntitySet<Order>(new Action<Order>(this.attach_Order), new Action<Order>(this.detach_Order));
			this._Order1 = new EntitySet<Order>(new Action<Order>(this.attach_Order1), new Action<Order>(this.detach_Order1));
			this._Bookings = new EntitySet<Bookings>(new Action<Bookings>(this.attach_Bookings), new Action<Bookings>(this.detach_Bookings));
			this._Bookings1 = new EntitySet<Bookings>(new Action<Bookings>(this.attach_Bookings1), new Action<Bookings>(this.detach_Bookings1));
			this._UserRole = default(EntityRef<UserRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this.OnLoginChanging(value);
					this.SendPropertyChanging();
					this._Login = value;
					this.SendPropertyChanged("Login");
					this.OnLoginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdRole", DbType="Int NOT NULL")]
		public int IdRole
		{
			get
			{
				return this._IdRole;
			}
			set
			{
				if ((this._IdRole != value))
				{
					if (this._UserRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdRoleChanging(value);
					this.SendPropertyChanging();
					this._IdRole = value;
					this.SendPropertyChanged("IdRole");
					this.OnIdRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order", Storage="_Order", ThisKey="Login", OtherKey="Customer")]
		public EntitySet<Order> Order
		{
			get
			{
				return this._Order;
			}
			set
			{
				this._Order.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Order1", Storage="_Order1", ThisKey="Login", OtherKey="Manager")]
		public EntitySet<Order> Order1
		{
			get
			{
				return this._Order1;
			}
			set
			{
				this._Order1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bookings", Storage="_Bookings", ThisKey="Login", OtherKey="LoginManager")]
		public EntitySet<Bookings> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bookings1", Storage="_Bookings1", ThisKey="Login", OtherKey="LoginUser")]
		public EntitySet<Bookings> Bookings1
		{
			get
			{
				return this._Bookings1;
			}
			set
			{
				this._Bookings1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_UserRole", ThisKey="IdRole", OtherKey="IdPole", IsForeignKey=true)]
		public UserRole UserRole
		{
			get
			{
				return this._UserRole.Entity;
			}
			set
			{
				UserRole previousValue = this._UserRole.Entity;
				if (((previousValue != value) 
							|| (this._UserRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserRole.Entity = null;
						previousValue.User.Remove(this);
					}
					this._UserRole.Entity = value;
					if ((value != null))
					{
						value.User.Add(this);
						this._IdRole = value.IdPole;
					}
					else
					{
						this._IdRole = default(int);
					}
					this.SendPropertyChanged("UserRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Order(Order entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Order1(Order entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Order1(Order entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Bookings1(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Bookings1(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserRole")]
	public partial class UserRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPole;
		
		private string _Name;
		
		private EntitySet<User> _User;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPoleChanging(int value);
    partial void OnIdPoleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public UserRole()
		{
			this._User = new EntitySet<User>(new Action<User>(this.attach_User), new Action<User>(this.detach_User));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPole", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPole
		{
			get
			{
				return this._IdPole;
			}
			set
			{
				if ((this._IdPole != value))
				{
					this.OnIdPoleChanging(value);
					this.SendPropertyChanging();
					this._IdPole = value;
					this.SendPropertyChanged("IdPole");
					this.OnIdPoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserRole_User", Storage="_User", ThisKey="IdPole", OtherKey="IdRole")]
		public EntitySet<User> User
		{
			get
			{
				return this._User;
			}
			set
			{
				this._User.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = this;
		}
		
		private void detach_User(User entity)
		{
			this.SendPropertyChanging();
			entity.UserRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarehouseOfFurniture")]
	public partial class WarehouseOfFurniture : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Part;
		
		private int _IdFurniture;
		
		private short _Qty;
		
		private EntityRef<Furniture> _Furniture;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartChanging(int value);
    partial void OnPartChanged();
    partial void OnIdFurnitureChanging(int value);
    partial void OnIdFurnitureChanged();
    partial void OnQtyChanging(short value);
    partial void OnQtyChanged();
    #endregion
		
		public WarehouseOfFurniture()
		{
			this._Furniture = default(EntityRef<Furniture>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Part", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Part
		{
			get
			{
				return this._Part;
			}
			set
			{
				if ((this._Part != value))
				{
					this.OnPartChanging(value);
					this.SendPropertyChanging();
					this._Part = value;
					this.SendPropertyChanged("Part");
					this.OnPartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFurniture", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdFurniture
		{
			get
			{
				return this._IdFurniture;
			}
			set
			{
				if ((this._IdFurniture != value))
				{
					if (this._Furniture.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFurnitureChanging(value);
					this.SendPropertyChanging();
					this._IdFurniture = value;
					this.SendPropertyChanged("IdFurniture");
					this.OnIdFurnitureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="SmallInt NOT NULL")]
		public short Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Furniture_WarehouseOfFurniture", Storage="_Furniture", ThisKey="IdFurniture", OtherKey="IdFurniture", IsForeignKey=true)]
		public Furniture Furniture
		{
			get
			{
				return this._Furniture.Entity;
			}
			set
			{
				Furniture previousValue = this._Furniture.Entity;
				if (((previousValue != value) 
							|| (this._Furniture.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Furniture.Entity = null;
						previousValue.WarehouseOfFurniture.Remove(this);
					}
					this._Furniture.Entity = value;
					if ((value != null))
					{
						value.WarehouseOfFurniture.Add(this);
						this._IdFurniture = value.IdFurniture;
					}
					else
					{
						this._IdFurniture = default(int);
					}
					this.SendPropertyChanged("Furniture");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WarehouseOfTextile")]
	public partial class WarehouseOfTextile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Roll;
		
		private int _IdTextile;
		
		private double _Width;
		
		private double _Length;
		
		private EntityRef<Textile> _Textile;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRollChanging(int value);
    partial void OnRollChanged();
    partial void OnIdTextileChanging(int value);
    partial void OnIdTextileChanged();
    partial void OnWidthChanging(double value);
    partial void OnWidthChanged();
    partial void OnLengthChanging(double value);
    partial void OnLengthChanged();
    #endregion
		
		public WarehouseOfTextile()
		{
			this._Textile = default(EntityRef<Textile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Roll", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Roll
		{
			get
			{
				return this._Roll;
			}
			set
			{
				if ((this._Roll != value))
				{
					this.OnRollChanging(value);
					this.SendPropertyChanging();
					this._Roll = value;
					this.SendPropertyChanged("Roll");
					this.OnRollChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTextile", DbType="Int NOT NULL")]
		public int IdTextile
		{
			get
			{
				return this._IdTextile;
			}
			set
			{
				if ((this._IdTextile != value))
				{
					if (this._Textile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTextileChanging(value);
					this.SendPropertyChanging();
					this._IdTextile = value;
					this.SendPropertyChanged("IdTextile");
					this.OnIdTextileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Float NOT NULL")]
		public double Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Length", DbType="Float NOT NULL")]
		public double Length
		{
			get
			{
				return this._Length;
			}
			set
			{
				if ((this._Length != value))
				{
					this.OnLengthChanging(value);
					this.SendPropertyChanging();
					this._Length = value;
					this.SendPropertyChanged("Length");
					this.OnLengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Textile_WarehouseOfTextile", Storage="_Textile", ThisKey="IdTextile", OtherKey="IdTextile", IsForeignKey=true)]
		public Textile Textile
		{
			get
			{
				return this._Textile.Entity;
			}
			set
			{
				Textile previousValue = this._Textile.Entity;
				if (((previousValue != value) 
							|| (this._Textile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Textile.Entity = null;
						previousValue.WarehouseOfTextile.Remove(this);
					}
					this._Textile.Entity = value;
					if ((value != null))
					{
						value.WarehouseOfTextile.Add(this);
						this._IdTextile = value.IdTextile;
					}
					else
					{
						this._IdTextile = default(int);
					}
					this.SendPropertyChanged("Textile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bookings")]
	public partial class Bookings : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBooking;
		
		private System.Nullable<int> _IdGood;
		
		private string _LoginUser;
		
		private string _LoginManager;
		
		private System.Nullable<int> _Cnt;
		
		private System.Nullable<decimal> _Total;
		
		private System.Nullable<System.DateTime> _Cdate;
		
		private EntityRef<User> _User;
		
		private EntityRef<User> _User1;
		
		private EntityRef<Goods> _Goods;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBookingChanging(int value);
    partial void OnIdBookingChanged();
    partial void OnIdGoodChanging(System.Nullable<int> value);
    partial void OnIdGoodChanged();
    partial void OnLoginUserChanging(string value);
    partial void OnLoginUserChanged();
    partial void OnLoginManagerChanging(string value);
    partial void OnLoginManagerChanged();
    partial void OnCntChanging(System.Nullable<int> value);
    partial void OnCntChanged();
    partial void OnTotalChanging(System.Nullable<decimal> value);
    partial void OnTotalChanged();
    partial void OnCdateChanging(System.Nullable<System.DateTime> value);
    partial void OnCdateChanged();
    #endregion
		
		public Bookings()
		{
			this._User = default(EntityRef<User>);
			this._User1 = default(EntityRef<User>);
			this._Goods = default(EntityRef<Goods>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBooking", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBooking
		{
			get
			{
				return this._IdBooking;
			}
			set
			{
				if ((this._IdBooking != value))
				{
					this.OnIdBookingChanging(value);
					this.SendPropertyChanging();
					this._IdBooking = value;
					this.SendPropertyChanged("IdBooking");
					this.OnIdBookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGood", DbType="Int")]
		public System.Nullable<int> IdGood
		{
			get
			{
				return this._IdGood;
			}
			set
			{
				if ((this._IdGood != value))
				{
					if (this._Goods.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdGoodChanging(value);
					this.SendPropertyChanging();
					this._IdGood = value;
					this.SendPropertyChanged("IdGood");
					this.OnIdGoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginUser", DbType="NVarChar(50)")]
		public string LoginUser
		{
			get
			{
				return this._LoginUser;
			}
			set
			{
				if ((this._LoginUser != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginUserChanging(value);
					this.SendPropertyChanging();
					this._LoginUser = value;
					this.SendPropertyChanged("LoginUser");
					this.OnLoginUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginManager", DbType="NVarChar(50)")]
		public string LoginManager
		{
			get
			{
				return this._LoginManager;
			}
			set
			{
				if ((this._LoginManager != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoginManagerChanging(value);
					this.SendPropertyChanging();
					this._LoginManager = value;
					this.SendPropertyChanged("LoginManager");
					this.OnLoginManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cnt", DbType="Int")]
		public System.Nullable<int> Cnt
		{
			get
			{
				return this._Cnt;
			}
			set
			{
				if ((this._Cnt != value))
				{
					this.OnCntChanging(value);
					this.SendPropertyChanging();
					this._Cnt = value;
					this.SendPropertyChanged("Cnt");
					this.OnCntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cdate", DbType="Date")]
		public System.Nullable<System.DateTime> Cdate
		{
			get
			{
				return this._Cdate;
			}
			set
			{
				if ((this._Cdate != value))
				{
					this.OnCdateChanging(value);
					this.SendPropertyChanging();
					this._Cdate = value;
					this.SendPropertyChanged("Cdate");
					this.OnCdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bookings", Storage="_User", ThisKey="LoginManager", OtherKey="Login", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._LoginManager = value.Login;
					}
					else
					{
						this._LoginManager = default(string);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Bookings1", Storage="_User1", ThisKey="LoginUser", OtherKey="Login", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Bookings1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Bookings1.Add(this);
						this._LoginUser = value.Login;
					}
					else
					{
						this._LoginUser = default(string);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Bookings", Storage="_Goods", ThisKey="IdGood", OtherKey="IdGood", IsForeignKey=true)]
		public Goods Goods
		{
			get
			{
				return this._Goods.Entity;
			}
			set
			{
				Goods previousValue = this._Goods.Entity;
				if (((previousValue != value) 
							|| (this._Goods.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Goods.Entity = null;
						previousValue.Bookings.Remove(this);
					}
					this._Goods.Entity = value;
					if ((value != null))
					{
						value.Bookings.Add(this);
						this._IdGood = value.IdGood;
					}
					else
					{
						this._IdGood = default(Nullable<int>);
					}
					this.SendPropertyChanged("Goods");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Goods")]
	public partial class Goods : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdGood;
		
		private string _Article;
		
		private string _Name;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<System.DateTime> _Cdate;
		
		private EntitySet<Bookings> _Bookings;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGoodChanging(int value);
    partial void OnIdGoodChanged();
    partial void OnArticleChanging(string value);
    partial void OnArticleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCdateChanging(System.Nullable<System.DateTime> value);
    partial void OnCdateChanged();
    #endregion
		
		public Goods()
		{
			this._Bookings = new EntitySet<Bookings>(new Action<Bookings>(this.attach_Bookings), new Action<Bookings>(this.detach_Bookings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGood", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdGood
		{
			get
			{
				return this._IdGood;
			}
			set
			{
				if ((this._IdGood != value))
				{
					this.OnIdGoodChanging(value);
					this.SendPropertyChanging();
					this._IdGood = value;
					this.SendPropertyChanged("IdGood");
					this.OnIdGoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Article", DbType="NVarChar(100)")]
		public string Article
		{
			get
			{
				return this._Article;
			}
			set
			{
				if ((this._Article != value))
				{
					this.OnArticleChanging(value);
					this.SendPropertyChanging();
					this._Article = value;
					this.SendPropertyChanged("Article");
					this.OnArticleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cdate", DbType="Date")]
		public System.Nullable<System.DateTime> Cdate
		{
			get
			{
				return this._Cdate;
			}
			set
			{
				if ((this._Cdate != value))
				{
					this.OnCdateChanging(value);
					this.SendPropertyChanging();
					this._Cdate = value;
					this.SendPropertyChanged("Cdate");
					this.OnCdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Goods_Bookings", Storage="_Bookings", ThisKey="IdGood", OtherKey="IdGood")]
		public EntitySet<Bookings> Bookings
		{
			get
			{
				return this._Bookings;
			}
			set
			{
				this._Bookings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.Goods = this;
		}
		
		private void detach_Bookings(Bookings entity)
		{
			this.SendPropertyChanging();
			entity.Goods = null;
		}
	}
}
#pragma warning restore 1591
